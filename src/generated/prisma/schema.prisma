generator client {
  provider      = "prisma-client-js"
  output        = "../src/generated/prisma"
  binaryTargets = ["native", "windows"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id             String    @id @default(uuid())
  name           String
  email          String    @unique
  emailVerified  DateTime?
  country        String
  interests      String[]  @default([])
  image          String?
  isPremium      Boolean   @default(false)
  createdAt      DateTime  @default(now())
  hashedPassword String?

  accounts  Account[]
  sessions  Session[]
  questions Question[]
  replies   Reply[]
}

model Question {
  id         String   @id @default(uuid())
  text       String
  category   String
  thumbsUp   String[] @default([])
  thumbsDown String[] @default([])
  createdAt  DateTime @default(now())

  userId String
  user   User   @relation(fields: [userId], references: [id])

  replies    Reply[]
  weeklyStar WeeklyStar[]
}

model Reply {
  id        String   @id @default(uuid())
  text      String
  likes     String[] @default([])
  createdAt DateTime @default(now())

  userId     String
  questionId String

  user     User     @relation(fields: [userId], references: [id])
  question Question @relation(fields: [questionId], references: [id])
}

model WeeklyStar {
  id         String   @id @default(uuid())
  week       Int
  year       Int
  declaredAt DateTime @default(now())

  questionId String   @unique
  question   Question @relation(fields: [questionId], references: [id])
}
